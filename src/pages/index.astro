---
import Layout from "@layouts/Layout.astro";
import Blob from "@components/astro/Blob.astro";
import PC from "@components/astro/PC.astro";

import { categories } from "config";

import "../styles/pages/_home.scss";
---

<Layout title="Accueil">
  <main class="container">
    <section class="wellcome-to">
      <div class="wellcome-to__heading">
        <h1 id="main-title">
          Hello je suis <span>Sairuss</span><br />
          bienvenue sur le blog, des <span>Rapax</span> ðŸ¦….
        </h1>

        <PC id="pc" />
      </div>
      <Blob />
    </section>

    <section id="container-masonry-1" class="masonry-grid">
      <h1 style="color: red">
        Je refais le design graphique de mon blog, j'ai des problemes
        d'inspiration. <a href="https://my-fcc-summary-sairussdev.netlify.app/"
          >voir ici pour rester cohÃ©rent</a
        >
      </h1>
      <!-- {
        categories.map((category) => {
          return (
            <a href={`/categories/${category}`}>
              <div class="masonry-grid-card">
                <header class="masonry-grid-card__heading">
                  <img src="/assets/img/development.png" alt="" />
                  <h3 class="title">{category}</h3>
                </header>
                <div class="masonry-grid-card__body">
                  Lorem ipsum dolor sit amet, consectetur adipisicing elit.
                  Voluptatem odit ut similique esse aut totam, itaque
                  perferendis earum quae dolore
                </div>
              </div>
            </a>
          );
        })
      } -->
    </section>
  </main>
</Layout>

<script>
  const masonryItems = document.querySelectorAll(".masonry-grid-card");

  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add("visible");
        } else {
          entry.target.classList.remove("visible");
        }
      });
    },
    {
      rootMargin: "0px",
      threshold: 0.7,
    }
  );

  if (masonryItems) {
    masonryItems.forEach((masonryItem) => {
      observer.observe(masonryItem);
    });
  }
</script>
